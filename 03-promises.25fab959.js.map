{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SACdD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBAC1BD,SAASC,cAAc,wBA8B3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAQ,CAACJ,WAAUC,S,GAEpBA,E,IAIPL,EAAOa,iBAAiB,UAzCD,SAACC,GACtBA,EAAMC,iBAWN,IATA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALX,MAAOe,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAIrBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAYH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EAAG,CAItCxB,EAAcwB,EAHKL,EAAaK,EAAIF,GAIjCG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACrByB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACpE6B,QAAMC,IAAI,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvD+B,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACtByB,EAAAhC,GAASiC,OAAOM,QAAQ,sBAAuCJ,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACnE6B,QAAMC,IAAI,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst inputFirstDelay = document.querySelector('input[name=\"delay\"]');\nconst inputDelayStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nconst onFormElSubmit = (event) => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  // console.log(Number(amount.value));\n\n  const firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountVal = Number(amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    let delayPromise = firstDelay + i * delayStep;\n    // console.log(delayPromise);\n\n    createPromise(i, delayPromise)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n      .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve ({position, delay})\n      } else {\n        reject ({position, delay})\n  }\n    }, delay)\n  }) \n}\n\nformEl.addEventListener(\"submit\", onFormElSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","firstDelay","Number","value","delayStep","amountVal","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.25fab959.js.map"}